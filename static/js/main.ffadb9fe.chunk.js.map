{"version":3,"sources":["components/AddTask.js","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["AddTask","addTask","useState","text","setText","day","setDay","className","onSubmit","e","preventDefault","isDone","htmlFor","id","name","type","placeholder","value","onChange","target","Button","color","toggleShow","style","backgroundColor","onClick","Header","title","showAddTask","Task","task","deleteTask","toggleDone","onDoubleClick","cursor","Tasks","tasks","map","App","setTasks","setShowAddTask","Math","floor","random","newTask","length","deletedTaskId","filter","toggleDoneId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffadb9fe.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst AddTask = ({ addTask }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addTask({ text, day, isDone: false });\r\n    setText(\"\");\r\n    setDay(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"add-form\" onSubmit={handleSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"task\">Task</label>\r\n          <input\r\n            id=\"task\"\r\n            name=\"text\"\r\n            type=\"text\"\r\n            placeholder=\"Add Task\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"day\">Day & Time</label>\r\n          <input\r\n            id=\"day\"\r\n            name=\"day\"\r\n            type=\"text\"\r\n            placeholder=\"Add Day & Time\"\r\n            value={day}\r\n            onChange={(e) => setDay(e.target.value)}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React from \"react\";\r\n\r\nconst Button = ({ color, text, toggleShow }) => {\r\n  return (\r\n    <div>\r\n      <button\r\n        className=\"btn\"\r\n        style={{ backgroundColor: color }}\r\n        onClick={toggleShow}\r\n      >\r\n        {text}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nconst Header = ({ title, showAddTask, toggleShow }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{title}</h1>\r\n      <Button\r\n        color={showAddTask ? \"red\" : \"purple\"}\r\n        text={showAddTask ? \"Close Add Task Bar\" : \"Show Add Task Bar\"}\r\n        toggleShow={toggleShow}\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, deleteTask, toggleDone }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.isDone ? \"done\" : \"\"}`}\r\n      onDoubleClick={() => toggleDone(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}\r\n        <FaTimes\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => deleteTask(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\n\r\nconst Tasks = ({ tasks, deleteTask, toggleDone }) => {\r\n  return (\r\n    <div>\r\n      {tasks.map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          deleteTask={deleteTask}\r\n          toggleDone={toggleDone}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import \"./App.css\";\nimport AddTask from \"./components/AddTask\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"Study React Pre-Class Notes\",\n      day: \"Feb 5th at 2:30pm\",\n      isDone: false,\n    },\n    {\n      id: 2,\n      text: \"Feed the Dog\",\n      day: \"Feb 6th at 1:30pm\",\n      isDone: false,\n    },\n    {\n      id: 3,\n      text: \"Attend in-Class\",\n      day: \"Feb 7th at 20:00pm\",\n      isDone: false,\n    },\n  ]);\n\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 100) + 1;\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n  };\n\n  const deleteTask = (deletedTaskId) => {\n    setTasks(tasks.filter((task) => task.id !== deletedTaskId));\n  };\n\n  const toggleDone = (toggleDoneId) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === toggleDoneId ? { ...task, isDone: !task.isDone } : task\n      )\n    );\n  };\n\n  const toggleShow = () => setShowAddTask(!showAddTask);\n\n  return (\n    <div className=\"App\">\n      <Header\n        title=\"Task Tracker\"\n        showAddTask={showAddTask}\n        toggleShow={toggleShow}\n      />\n      {showAddTask && <AddTask addTask={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} deleteTask={deleteTask} toggleDone={toggleDone} />\n      ) : (\n        \"No Tasks to Show\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}